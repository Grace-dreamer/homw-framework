<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.homw.schedule.dao.SysUserDao">
	<select id="queryObject" resultType="com.homw.schedule.entity.SysUserEntity">
		select u.*, r.role_name from sys_user u
		left join sys_user_role ur on u.user_id = ur.user_id
		left join sys_role r on ur.role_id = r.role_id
		where u.user_id = #{value}
	</select>
	
	<select id="queryList" resultType="com.homw.schedule.entity.SysUserEntity">
		select u.*, r.role_name from (select u.* from (select su.* from sys_user su
		<if test="roleIds != null">
			inner join sys_user_role sr on su.user_id = sr.user_id and sr.role_id in 
			<foreach item="roleId" collection="roleIds" open="(" separator="," close=")">
				#{roleId}
			</foreach>
		</if>) u 
		<if test="type != null and type != -1">inner join sys_user_role r on u.user_id = r.user_id and r.role_id = #{type}</if>
		<where>
			<if test="userId != null">
				EXISTS (SELECT 1 FROM t_user_lot t
				WHERE EXISTS (SELECT 1 FROM t_user_lot t2
				WHERE t2.`lot_id` = t.`lot_id` AND t2.`user_id` = #{userId}) AND t.`user_id` = u.`user_id`)
			</if>
			<if test="username != null and username != ''"> and u.`username` like concat('%', #{username}, '%') </if>
			<if test="mobile != null and mobile != ''"> and u.`mobile` like concat('%', #{mobile}, '%') </if>
			<if test="status != null and status != -1"> and u.`status` = #{status} </if>
			<if test="realname != null and realname != ''"> and u.`realname` like concat('%', #{realname}, '%') </if>
		</where>
		) u left join sys_user_role ur on u.user_id = ur.user_id
		left join sys_role r on ur.role_id = r.role_id
		order by u.user_id desc
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
	<select id="queryTotal" resultType="int">
		select count(*) from (select u.* from (select su.* from sys_user su
		<if test="roleIds != null">
			inner join sys_user_role sr on su.user_id = sr.user_id and sr.role_id in 
			<foreach item="roleId" collection="roleIds" open="(" separator="," close=")">
				#{roleId}
			</foreach>
		</if>) u
		<if test="type != null and type != -1">inner join sys_user_role r on u.user_id = r.user_id and r.role_id = #{type}</if>
		<where>
			<if test="userId != null">
				EXISTS (SELECT 1 FROM t_user_lot t
				WHERE EXISTS (SELECT 1 FROM t_user_lot t2
				WHERE t2.`lot_id` = t.`lot_id` AND t2.`user_id` = #{userId}) AND t.`user_id` = u.`user_id`)
			</if>
			<if test="username != null and username != ''"> and u.`username` like concat('%', #{username}, '%') </if>
			<if test="mobile != null and mobile != ''"> and u.`mobile` like concat('%', #{mobile}, '%') </if>
			<if test="status != null and status != -1"> and u.`status` = #{status} </if>
			<if test="realname != null and realname != ''"> and u.`realname` like concat('%', #{realname}, '%') </if>
		</where>
		) u left join sys_user_role ur on u.user_id = ur.user_id
		left join sys_role r on ur.role_id = r.role_id
	</select>
	
	<!-- 查询用户的所有权限 -->
	<select id="queryAllPerms" resultType="String">
		select m.perms from sys_user_role ur 
			LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id 
			LEFT JOIN sys_menu m on rm.menu_id = m.menu_id 
		where ur.user_id = #{userId}
	</select>
	
	<!-- 查询用户的所有菜单ID --> 
	<select id="queryAllMenuId" resultType="Long">
		select m.menu_id from sys_user_role ur 
			LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id 
			LEFT JOIN sys_menu m on rm.menu_id = m.menu_id 
		where ur.user_id = #{userId}
	</select>
	
	<select id="queryByUserName" resultType="com.homw.schedule.entity.SysUserEntity">
		select * from sys_user where username = #{username}
	</select>
	
	<insert id="save" parameterType="com.homw.schedule.entity.SysUserEntity" useGeneratedKeys="true" keyProperty="userId">
		insert into sys_user
		(
			`user_id`, 
			`username`, 
			`password`, 
			`email`, 
			`mobile`, 
			`status`, 
			`create_time`,
			`realname`,
			`describ`
		)
		values
		(
			#{userId}, 
			#{username}, 
			#{password}, 
			#{email}, 
			#{mobile}, 
			#{status}, 
			#{createTime},
			#{realname},
			#{describ}
		)
	</insert>
	 
	<update id="update" parameterType="com.homw.schedule.entity.SysUserEntity">
		update sys_user 
		<set> 
			<if test="username != null">`username` = #{username}, </if>
			<if test="password != null">`password` = #{password}, </if>
			<if test="email != null">`email` = #{email}, </if>
			<if test="mobile != null">`mobile` = #{mobile}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="realname != null">`realname` = #{realname}, </if>
			<if test="describ != null">`describ` = #{describ}, </if>
		</set>
		where user_id = #{userId}
	</update>
	
	<update id="updatePassword" parameterType="map">
		update sys_user set `password` = #{newPassword} 
			where user_id = #{userId} and password = #{password}
	</update>
	
	<delete id="deleteBatch">
		delete from sys_user where user_id in 
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
		;
		delete from sys_user_role where user_id in 
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
	</delete>

</mapper>